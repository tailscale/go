name: Build toolchain

on:
  push:
    branches:
      - tailscale
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1
      id: go

    - name: Checkout
      uses: actions/checkout@v2

    # Linux build
    - name: Build toolchain (linux)
      run: cd src && ./make.bash

    - name: Archive toolchain
      run: cd .. && tar --exclude-vcs -zcf linux.tar.gz go

    - name: Clean toolchain
      run: cd src && ./clean.bash

    # macOS build
    - name: Build toolchain (darwin)
      run: cd src && ./make.bash
      env:
        GOOS: darwin

    - name: Archive toolchain
      run: cd .. && tar --exclude-vcs -zcf darwin.tar.gz go

      # Run all.bash after building the toolchain archive, so we don't
      # end up with a bunch of garbage in the tarballs.
    - name: Test toolchain
      run: cd src && ./all.bash

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # Release name can't be the same as tag name, sigh
        tag_name: build-${{ github.sha }}
        release_name: ${{ github.sha }}
        draft: false
        prerelease: true

    - name: Upload linux tarball
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../linux.tar.gz
        asset_name: linux.tar.gz
        asset_content_type: application/gzip

    - name: Upload darwin tarball
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../darwin.tar.gz
        asset_name: darwin.tar.gz
        asset_content_type: application/gzip

    - name: Delete older builds
      run: ./.github/workflows/prune_old_builds.sh "${{ secrets.GITHUB_TOKEN }}"
